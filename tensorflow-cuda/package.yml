name       : tensorflow-cuda
version    : 1.14.0
release    : 6
source     :
    - https://github.com/tensorflow/tensorflow/archive/v1.14.0.tar.gz : aa2a6a1daafa3af66807cfe0bc77bfe1144a9a53df9a96bab52e3e575b3047ed
license    : Apache-2.0
component  :
    - programming.python
    - c-api : programming.library
summary    :
    - An open source machine learning framework for high performance numerical computation
    - c-api : The C API for tensorflow
description: |
    TensorFlowâ„¢ is an open source software library for high performance numerical computation using data flow graphs.
networking : yes
patterns   :
    - c-api :
        - /usr/include
        - /usr/lib/lib*.so*
        - /usr/lib64
builddeps  :
    - pkgconfig(libcares)
    - pkgconfig(python3)
    - bazel
    - python-keras-applications
    - python-keras-preprocessing
    - python-wheel
    - nvidia-glx-driver-common
    - cuda
    - cudnn
    - pkgconfig(nccl)
    - tensorrt-devel
rundeps    :
    - python-absl-py
    - python-astor
    - python-gast
    - python-keras-applications
    - python-keras-preprocessing
    - python-mock
    - python-tensorboard
conflicts  :
    - tensorflow
    - c-api :
        - tensorflow-c-api
setup      : |
    %patch -p1 < $pkgfiles/cuda_configure.patch

    cp -a $workdir $PKG_BUILD_DIR/py3build

    export USE_DEFAULT_PYTHON_LIB_PATH=1
    export TF_ENABLE_XLA=1
    export TF_NEED_OPENCL_SYCL=0
    export TF_NEED_ROCM=0

    export TF_NEED_CUDA=1
    export TF_CUDA_PATHS=/usr/lib64/cuda,/usr,/usr/lib64
    export TF_CUDA_VERSION=10.1
    export TF_CUDNN_VERSION=7
    export TF_NEED_TENSORRT=0
    export TF_NCCL_VERSION=2.4.8
    export TF_CUDA_COMPUTE_CAPABILITIES=6.1 # GTX 1060
    export TF_CUDA_CLANG=0
    export GCC_HOST_COMPILER_PATH=/usr/bin/gcc

    export TF_NEED_MPI=0
    export CC_OPT_FLAGS="-mtune=haswell -march=haswell -g2 -O3 -Wno-sign-compare" # "native" should not be used if pushing to Solus repo
    export TF_SET_ANDROID_WORKSPACE=0

    pushd $PKG_BUILD_DIR/py3build
    export PYTHON_BIN_PATH=/usr/bin/python3
    mkdir -p $PKG_BUILD_DIR/bazel-cache-py3build
    TEST_TMPDIR=$PKG_BUILD_DIR/bazel-cache-py3build ./configure
    popd
build      : |
    export PATH=$PATH:/usr/lib64/cuda/bin
    pushd $PKG_BUILD_DIR/py3build
    TEST_TMPDIR=$PKG_BUILD_DIR/bazel-cache-py3build bazel build \
        --ram_utilization_factor=8 \
        --config=opt --config=cuda \
        --config=noignite --config=nokafka \
        //tensorflow/tools/lib_package:libtensorflow //tensorflow/tools/pip_package:build_pip_package
    mkdir -p tmp
    bazel-bin/tensorflow/tools/pip_package/build_pip_package tmp/tensorflow_pkg
    popd
install    : |
    pushd $PKG_BUILD_DIR/py3build
    WHEEL_NAME=$(basename tmp/tensorflow_pkg/tensorflow*.whl)
    pip3 install --no-deps --root=$installdir tmp/tensorflow_pkg/$WHEEL_NAME

    # Remove tensorboard
    rm -rfv $installdir/usr/bin/tensorboard

    # tensorflow-cuda-c-api
    tensorflow/c/generate-pc.sh --prefix=/usr --libdir=lib64 --version=$version
    install -Dm00644 tensorflow.pc $installdir/usr/lib64/pkgconfig/tensorflow.pc
    tar -zxvf bazel-bin/tensorflow/tools/lib_package/libtensorflow.tar.gz -C $installdir/%PREFIX%
    popd

    # Clean up
    find $installdir/usr/include -type f -print0 | xargs -0 chmod 644
